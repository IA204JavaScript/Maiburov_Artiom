import { addTodo, removeTodo, toggleTodo, editTodo, getFilteredTodos } from './todos.js';

const todoListEl = document.getElementById('todo-list');
const searchInputEl = document.getElementById('search-input');
const filterSelectEl = document.getElementById('filter-select');

/**
 * –°–æ–∑–¥–∞—ë—Ç —ç–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ
 * @param {object} todo
 * @returns {HTMLElement}
 */
function createTodoElement(todo) {
  const li = document.createElement('li');
  li.className = 'todo-item';
  if (todo.completed) li.classList.add('completed');
  li.dataset.id = todo.id;

  const textSpan = document.createElement('span');
  textSpan.className = 'todo-text';
  textSpan.textContent = todo.text;

  // –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  textSpan.addEventListener('dblclick', () => startEditing(li, todo));

  // –ö–ª–∏–∫ –ø–æ —Ç–µ–∫—Å—Ç—É - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å
  textSpan.addEventListener('click', () => {
    toggleTodo(todo.id);
    renderTodos();
  });

  const actionsDiv = document.createElement('div');
  actionsDiv.className = 'todo-actions';

  const editBtn = document.createElement('button');
  editBtn.className = 'edit';
  editBtn.textContent = '‚úèÔ∏è';
  editBtn.title = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
  editBtn.addEventListener('click', () => startEditing(li, todo));

  const deleteBtn = document.createElement('button');
  deleteBtn.className = 'delete';
  deleteBtn.textContent = 'üóëÔ∏è';
  deleteBtn.title = '–£–¥–∞–ª–∏—Ç—å';
  deleteBtn.addEventListener('click', () => {
    removeTodo(todo.id);
    renderTodos();
  });

  actionsDiv.append(editBtn, deleteBtn);
  li.append(textSpan, actionsDiv);

  return li;
}

/**
 * –ù–∞—á–∏–Ω–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
 * @param {HTMLElement} li
 * @param {object} todo
 */
function startEditing(li, todo) {
  li.innerHTML = '';

  const input = document.createElement('input');
  input.type = 'text';
  input.value = todo.text;
  input.className = 'todo-edit-input';

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ Enter –∏ –ø–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞
  input.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') {
      finishEditing(li, todo, input.value);
    } else if (e.key === 'Escape') {
      renderTodos();
    }
  });

  input.addEventListener('blur', () => {
    finishEditing(li, todo, input.value);
  });

  li.appendChild(input);
  input.focus();
}

/**
 * –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
 * @param {HTMLElement} li
 * @param {object} todo
 * @param {string} newText
 */
function finishEditing(li, todo, newText) {
  if (newText.trim()) {
    editTodo(todo.id, newText.trim());
  }
  renderTodos();
}

/**
 * –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å —É—á—ë—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞ –∏ –ø–æ–∏—Å–∫–∞
 */
export function renderTodos() {
  const filter = filterSelectEl.value;
  const searchTerm = searchInputEl.value;

  const todosToShow = getFilteredTodos(filter, searchTerm);

  todoListEl.innerHTML = '';
  todosToShow.forEach(todo => {
    todoListEl.appendChild(createTodoElement(todo));
  });
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º—ã –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
 */
export function setupUIHandlers() {
  const form = document.getElementById('todo-form');
  const todoInput = document.getElementById('todo-input');

  form.addEventListener('submit', e => {
    e.preventDefault();
    const text = todoInput.value.trim();
    if (!text) {
      alert('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏');
      return;
    }
    addTodo(text);
    todoInput.value = '';
    renderTodos();
  });

  searchInputEl.addEventListener('input', renderTodos);
  filterSelectEl.addEventListener('change', renderTodos);
}
